{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Muhar\\\\Desktop\\\\contact-keeper-MERN\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from \"react\";\nimport ContactContext from \"./contactContext\";\nimport contactReducer from \"./contactReducer\";\nimport axios from \"axios\";\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, CONTACT_ERROR } from \"../types\";\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    try {\n      const res = await axios.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; //Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear Current Contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter Contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; //Clear Filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["C:/Users/Muhar/Desktop/contact-keeper-MERN/client/src/context/contact/ContactState.js"],"names":["React","useReducer","ContactContext","contactReducer","axios","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","response","msg","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport ContactContext from \"./contactContext\";\r\nimport contactReducer from \"./contactReducer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  SET_ALERT,\r\n  REMOVE_ALERT,\r\n  CONTACT_ERROR,\r\n} from \"../types\";\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [],\r\n    current: null,\r\n    filtered: null,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n  //Add Contact\r\n  const addContact = async (contact) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(\"/api/contacts\", contact, config);\r\n      dispatch({\r\n        type: ADD_CONTACT,\r\n        payload: res.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CONTACT_ERROR,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  //Delete Contact\r\n  const deleteContact = (id) => {\r\n    dispatch({\r\n      type: DELETE_CONTACT,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  //Set Current Contact\r\n  const setCurrent = (contact) => {\r\n    dispatch({\r\n      type: SET_CURRENT,\r\n      payload: contact,\r\n    });\r\n  };\r\n\r\n  //Clear Current Contact\r\n\r\n  const clearCurrent = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT,\r\n    });\r\n  };\r\n\r\n  //Update Contact\r\n\r\n  const updateContact = (contact) => {\r\n    dispatch({\r\n      type: UPDATE_CONTACT,\r\n      payload: contact,\r\n    });\r\n  };\r\n\r\n  //Filter Contacts\r\n\r\n  const filterContacts = (text) => {\r\n    dispatch({\r\n      type: FILTER_CONTACTS,\r\n      payload: text,\r\n    });\r\n  };\r\n\r\n  //Clear Filter\r\n  const clearFilter = () => {\r\n    dispatch({\r\n      type: CLEAR_FILTER,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        filtered: state.filtered,\r\n        error: state.error,\r\n        addContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n        updateContact,\r\n        filterContacts,\r\n        clearFilter,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}