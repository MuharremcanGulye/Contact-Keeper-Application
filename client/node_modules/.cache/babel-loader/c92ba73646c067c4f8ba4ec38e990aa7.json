{"ast":null,"code":"import { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS } from \"../types\";\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [action.payload, ...state.contacts],\n        loading: false\n      };\n\n    case GET_CONTACTS:\n      {\n        return { ...state,\n          contacts: action.payload,\n          loading: false\n        };\n      }\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact._id !== action.payload),\n        loading: false\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case FILTER_CONTACTS:\n      return { ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, \"gi\");\n          return contact.name.match(regex) || contact.email.match(regex);\n        }),\n        loading: false\n      };\n\n    case CLEAR_FILTER:\n      return { ...state,\n        filter: null,\n        loading: false\n      };\n\n    case CONTACT_ERROR:\n      return { ...state,\n        error: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Muhar/Desktop/contact-keeper-MERN/client/src/context/contact/contactReducer.js"],"names":["ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","state","action","type","contacts","payload","loading","filter","contact","_id","map","id","current","filtered","regex","RegExp","name","match","email","error"],"mappings":"AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,EAQEC,aARF,EASEC,YATF,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,QAA1B,CAFL;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKN,YAAL;AAAmB;AACjB,eAAO,EACL,GAAGC,KADE;AAELG,UAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFZ;AAGLC,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKb,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,GAAR,KAAgBP,MAAM,CAACG,OAD5B,CAFL;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAQF,SAAKV,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,GAAf,CAAoBF,OAAD,IAC3BA,OAAO,CAACG,EAAR,KAAeT,MAAM,CAACG,OAAP,CAAeM,EAA9B,GAAmCT,MAAM,CAACG,OAA1C,GAAoDG,OAD5C,CAFL;AAKLF,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAQF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELW,QAAAA,OAAO,EAAEV,MAAM,CAACG;AAFX,OAAP;;AAKF,SAAKV,aAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELW,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF,SAAKf,eAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELY,QAAAA,QAAQ,EAAEZ,KAAK,CAACG,QAAN,CAAeG,MAAf,CAAuBC,OAAD,IAAa;AAC3C,gBAAMM,KAAK,GAAG,IAAIC,MAAJ,CAAY,GAAEb,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAd;AACA,iBAAOG,OAAO,CAACQ,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BN,OAAO,CAACU,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS,CAFL;AAMLR,QAAAA,OAAO,EAAE;AANJ,OAAP;;AASF,SAAKR,YAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELM,QAAAA,MAAM,EAAE,IAFH;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKP,aAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELkB,QAAAA,KAAK,EAAEjB,MAAM,CAACG,OAFT;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOL,KAAP;AAtEJ;AAwED,CAzED","sourcesContent":["import {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n  CONTACT_ERROR,\r\n  GET_CONTACTS,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n        loading: false,\r\n      };\r\n\r\n    case GET_CONTACTS: {\r\n      return {\r\n        ...state,\r\n        contacts: action.payload,\r\n        loading: false,\r\n      };\r\n    }\r\n\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact._id !== action.payload\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id ? action.payload : contact\r\n        ),\r\n        loading: false,\r\n      };\r\n\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n\r\n    case FILTER_CONTACTS:\r\n      return {\r\n        ...state,\r\n        filtered: state.contacts.filter((contact) => {\r\n          const regex = new RegExp(`${action.payload}`, \"gi\");\r\n          return contact.name.match(regex) || contact.email.match(regex);\r\n        }),\r\n        loading: false,\r\n      };\r\n\r\n    case CLEAR_FILTER:\r\n      return {\r\n        ...state,\r\n        filter: null,\r\n        loading: false,\r\n      };\r\n\r\n    case CONTACT_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}